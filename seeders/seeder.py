"""
COMPLETE Menu Database Populator for Start Food Telegram Bot
Adds ALL products from the menu images
"""

import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database.models import Base, Category, SubCategory, Product

db_path = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), "database.db")
DATABASE_URL = f"sqlite:///{db_path}"
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(bind=engine)

def populate_database():
    session = SessionLocal()
    
    try:
        print("=" * 50)
        print("CREATING CATEGORIES")
        print("=" * 50)
        
        # 1. Create Categories
        drinks_cat = Category(name_uz="Ichimliklar", name_ru="–ù–∞–ø–∏—Ç–∫–∏", name_en="Drinks")
        foods_cat = Category(name_uz="Ovqatlar", name_ru="–ï–¥–∞", name_en="Foods")
        
        session.add_all([drinks_cat, foods_cat])
        session.commit()
        session.refresh(drinks_cat)
        session.refresh(foods_cat)
        
        print(f"‚úÖ Drinks Category ID: {drinks_cat.id}")
        print(f"‚úÖ Foods Category ID: {foods_cat.id}")
        
        print("\n" + "=" * 50)
        print("CREATING SUBCATEGORIES")
        print("=" * 50)
        
        # 2. Create Subcategories under FOODS
        pizza_sub = SubCategory(category_id=foods_cat.id, name_uz="Pizza", name_ru="–ü–∏—Ü—Ü–∞", name_en="Pizza")
        session.add(pizza_sub)
        session.commit()
        session.refresh(pizza_sub)
        print(f"‚úÖ Pizza Subcategory ID: {pizza_sub.id} (under Foods category {foods_cat.id})")
        
        burger_sub = SubCategory(category_id=foods_cat.id, name_uz="Burger", name_ru="–ë—É—Ä–≥–µ—Ä", name_en="Burger")
        session.add(burger_sub)
        session.commit()
        session.refresh(burger_sub)
        print(f"‚úÖ Burger Subcategory ID: {burger_sub.id} (under Foods category {foods_cat.id})")
        
        hotdog_sub = SubCategory(category_id=foods_cat.id, name_uz="Hot-dog", name_ru="–•–æ—Ç-–¥–æ–≥", name_en="Hot-dog")
        session.add(hotdog_sub)
        session.commit()
        session.refresh(hotdog_sub)
        print(f"‚úÖ Hot-dog Subcategory ID: {hotdog_sub.id} (under Foods category {foods_cat.id})")
        
        lavash_sub = SubCategory(category_id=foods_cat.id, name_uz="Lavash", name_ru="–õ–∞–≤–∞—à", name_en="Lavash")
        session.add(lavash_sub)
        session.commit()
        session.refresh(lavash_sub)
        print(f"‚úÖ Lavash Subcategory ID: {lavash_sub.id} (under Foods category {foods_cat.id})")
        
        chicken_sub = SubCategory(category_id=foods_cat.id, name_uz="Tovuq", name_ru="–ö—É—Ä–∏—Ü–∞", name_en="Chicken")
        session.add(chicken_sub)
        session.commit()
        session.refresh(chicken_sub)
        print(f"‚úÖ Chicken Subcategory ID: {chicken_sub.id} (under Foods category {foods_cat.id})")
        
        combo_sub = SubCategory(category_id=foods_cat.id, name_uz="Kombo", name_ru="–ö–æ–º–±–æ", name_en="Combo")
        session.add(combo_sub)
        session.commit()
        session.refresh(combo_sub)
        print(f"‚úÖ Combo Subcategory ID: {combo_sub.id} (under Foods category {foods_cat.id})")
        
        # 3. Create Subcategories under DRINKS
        soft_drinks_sub = SubCategory(category_id=drinks_cat.id, name_uz="Gazlangan ichimliklar", name_ru="–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏", name_en="Soft Drinks")
        session.add(soft_drinks_sub)
        session.commit()
        session.refresh(soft_drinks_sub)
        print(f"‚úÖ Soft Drinks Subcategory ID: {soft_drinks_sub.id} (under Drinks category {drinks_cat.id})")
        
        hot_drinks_sub = SubCategory(category_id=drinks_cat.id, name_uz="Issiq ichimliklar", name_ru="–ì–æ—Ä—è—á–∏–µ –Ω–∞–ø–∏—Ç–∫–∏", name_en="Hot Drinks")
        session.add(hot_drinks_sub)
        session.commit()
        session.refresh(hot_drinks_sub)
        print(f"‚úÖ Hot Drinks Subcategory ID: {hot_drinks_sub.id} (under Drinks category {drinks_cat.id})")
        
        print("\n" + "=" * 50)
        print("ADDING ALL PRODUCTS")
        print("=" * 50)
        
        # ============ PIZZA PRODUCTS ============
        print(f"\nüçï Adding Pizza products (subcategory_id={pizza_sub.id})...")
        pizzas = [
            {"name": "Assorti", "name_en": "Assorti", "name_ru": "–ê—Å—Å–æ—Ä—Ç–∏", "price": 30000},
            {"name": "Donarli", "name_en": "Donarli", "name_ru": "–î–æ–Ω–∞—Ä–ª–∏", "price": 30000},
            {"name": "Go'shtli", "name_en": "Go'shtli", "name_ru": "–ì–æ—à—Ç–ª–∏", "price": 30000},
            {"name": "Qazili", "name_en": "Qazili", "name_ru": "–ö–∞–∑–∏–ª–∏", "price": 30000},
            {"name": "Pishl–æqli", "name_en": "Pishl–æqli", "name_ru": "–ü–∏—à–ª–æ–∫–ª–∏", "price": 26000},
            {"name": "Pepperoni", "name_en": "Pepperoni", "name_ru": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏", "price": 26000},
            {"name": "Tovuqli", "name_en": "Tovuqli", "name_ru": "–¢–æ–≤—É–æ–ª–∏", "price": 26000},
            {"name": "Vegetarian", "name_en": "Vegetarian", "name_ru": "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω", "price": 26000},
            {"name": "Margarita", "name_en": "Margarita", "name_ru": "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "price": 26000},
            {"name": "Smart", "name_en": "Smart", "name_ru": "–°–º–∞—Ä—Ç", "price": 26000},
            {"name": "Ikki karra pepperoni", "name_en": "Double Pepperoni", "name_ru": "–î–≤–æ–π–Ω–æ–π –ø–µ–ø–ø–µ—Ä–æ–Ω–∏", "price": 30000},
            {"name": "Rimiskaya", "name_en": "Rimiskaya", "name_ru": "–†–∏–º—Å–∫–∞—è", "price": 30000},
            {"name": "Pepperoni + Tovuqli", "name_en": "Pepperoni + Chicken", "name_ru": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ + –ö—É—Ä–∏—Ü–∞", "price": 30000},
            {"name": "Tovuqu", "name_en": "Tovuqu", "name_ru": "–¢–æ–≤—É–æ—É", "price": 30000},
            {"name": "Burgerli", "name_en": "Burger Pizza", "name_ru": "–ë—É—Ä–≥–µ—Ä–ª–∏", "price": 30000},
            {"name": "Sezar", "name_en": "Caesar", "name_ru": "–¶–µ–∑–∞—Ä—å", "price": 30000},
            {"name": "Baqlaj–ænli", "name_en": "Eggplant", "name_ru": "–ë–∞–∫–ª–∞–∂–∞–Ω–ª–∏", "price": 30000},
            {"name": "Smart Tu—Öumli", "name_en": "Smart with Egg", "name_ru": "–°–º–∞—Ä—Ç –¢—É—Ö—É–º–ª–∏", "price": 30000},
            {"name": "Milano", "name_en": "Milano", "name_ru": "–ú–∏–ª–∞–Ω–æ", "price": 30000},
            {"name": "Go'ziqorinli", "name_en": "Mushroom", "name_ru": "–ì–æ–∑–∏–∫–æ—Ä–∏–Ω–ª–∏", "price": 30000},
            {"name": "Vegetariana", "name_en": "Vegetariana", "name_ru": "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–∞", "price": 30000},
            {"name": "Meksikano", "name_en": "Mexicano", "name_ru": "–ú–µ–∫—Å–∏–∫–∞–Ω–æ", "price": 30000},
        ]
        
        for p in pizzas:
            session.add(Product(subcategory_id=pizza_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(pizzas)} pizzas")
        
        # ============ BURGER PRODUCTS ============
        print(f"\nüçî Adding Burger products (subcategory_id={burger_sub.id})...")
        burgers = [
            {"name": "Chicken Burger", "name_en": "Chicken Burger", "name_ru": "–ß–∏–∫–µ–Ω –ë—É—Ä–≥–µ—Ä", "price": 24000},
            {"name": "Burger Chiz", "name_en": "Burger Chiz", "name_ru": "–ë—É—Ä–≥–µ—Ä –ß–∏–∑", "price": 26000},
            {"name": "Donarli Burger", "name_en": "Doner Burger", "name_ru": "–î–æ–Ω–∞—Ä–ª–∏ –ë—É—Ä–≥–µ—Ä", "price": 27000},
            {"name": "Burger Burger Chiz", "name_en": "Burger Burger Chiz", "name_ru": "–ë—É—Ä–≥–µ—Ä –ë—É—Ä–≥–µ—Ä –ß–∏–∑", "price": 27000},
            {"name": "Dabl Burger", "name_en": "Double Burger", "name_ru": "–î–∞–±–ª –ë—É—Ä–≥–µ—Ä", "price": 38000},
            {"name": "Dabl Burger Chiz", "name_en": "Double Burger Chiz", "name_ru": "–î–∞–±–ª –ë—É—Ä–≥–µ—Ä –ß–∏–∑", "price": 42000},
            {"name": "Smart Burger", "name_en": "Smart Burger", "name_ru": "–°–º–∞—Ä—Ç –ë—É—Ä–≥–µ—Ä", "price": 38000},
            {"name": "Kanada", "name_en": "Canada", "name_ru": "–ö–∞–Ω–∞–¥–∞", "price": 14000},
            {"name": "Dabl", "name_en": "Double", "name_ru": "–î–∞–±–ª", "price": 18000},
            {"name": "Karalevskiy", "name_en": "Royal", "name_ru": "–ö–∞—Ä–∞–ª–µ–≤—Å–∫–∏–π", "price": 26000},
            {"name": "Kichik", "name_en": "Small", "name_ru": "–ö–∏—á–∏–∫", "price": 10000},
        ]
        
        for p in burgers:
            session.add(Product(subcategory_id=burger_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(burgers)} burgers")
        
        # ============ HOT-DOG PRODUCTS ============
        print(f"\nüå≠ Adding Hot-dog products (subcategory_id={hotdog_sub.id})...")
        hotdogs = [
            {"name": "Sirli", "name_en": "Sirli", "name_ru": "–°–∏—Ä–ª–∏", "price": 16000},
            {"name": "Halapino", "name_en": "Jalapeno", "name_ru": "–•–∞–ª–∞–ø–∏–Ω–æ", "price": 16000},
            {"name": "Longer", "name_en": "Longer", "name_ru": "–õ–æ–Ω–≥–µ—Ä", "price": 18000},
            {"name": "Qazili", "name_en": "Qazili", "name_ru": "–ö–∞–∑–∏–ª–∏", "price": 27000},
            {"name": "Smart", "name_en": "Smart", "name_ru": "–°–º–∞—Ä—Ç", "price": 19000},
            {"name": "Achchiiq", "name_en": "Spicy", "name_ru": "–ê—á—á–∏–∏k", "price": 15000},
            {"name": "Go'shtli", "name_en": "Meat", "name_ru": "–ì–æ—à—Ç–ª–∏", "price": 25000},
            {"name": "Assorti", "name_en": "Assorti", "name_ru": "–ê—Å—Å–æ—Ä—Ç–∏", "price": 27000},
        ]
        
        for p in hotdogs:
            session.add(Product(subcategory_id=hotdog_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(hotdogs)} hot-dogs")
        
        # ============ LAVASH PRODUCTS ============
        print(f"\nüåØ Adding Lavash products (subcategory_id={lavash_sub.id})...")
        lavashes = [
            {"name": "Katta", "name_en": "Large", "name_ru": "–ö–∞—Ç—Ç–∞", "price": 32000},
            {"name": "Kichik", "name_en": "Small", "name_ru": "–ö–∏—á–∏–∫", "price": 25000},
            {"name": "Sirli", "name_en": "Sirli", "name_ru": "–°–∏—Ä–ª–∏", "price": 33000},
            {"name": "Tandir", "name_en": "Tandir", "name_ru": "–¢–∞–Ω–¥–∏—Ä", "price": 34000},
            {"name": "Halapino", "name_en": "Jalapeno", "name_ru": "–•–∞–ª–∞–ø–∏–Ω–æ", "price": 34000},
            {"name": "Achchiiq", "name_en": "Spicy", "name_ru": "–ê—á—á–∏–∏k", "price": 35000},
            {"name": "Achchiiq Katta", "name_en": "Spicy Large", "name_ru": "–ê—á—á–∏–∏k –ö–∞—Ç—Ç–∞", "price": 38000},
            {"name": "Toster", "name_en": "Toaster", "name_ru": "–¢–æ—Å—Ç–µ—Ä", "price": 26000},
            {"name": "Toster Chiz", "name_en": "Toaster Chiz", "name_ru": "–¢–æ—Å—Ç–µ—Ä –ß–∏–∑", "price": 28000},
            {"name": "Lester", "name_en": "Lester", "name_ru": "–õ–µ—Å—Ç–µ—Ä", "price": 19000},
            {"name": "Lester Chiz", "name_en": "Lester Chiz", "name_ru": "–õ–µ—Å—Ç–µ—Ä –ß–∏–∑", "price": 21000},
        ]
        
        for p in lavashes:
            session.add(Product(subcategory_id=lavash_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(lavashes)} lavash items")
        
        # ============ CHICKEN PRODUCTS ============
        print(f"\nüçó Adding Chicken products (subcategory_id={chicken_sub.id})...")
        chickens = [
            {"name": "Strips 12", "name_en": "Strips 12", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 12", "price": 12000},
            {"name": "Strips 16", "name_en": "Strips 16", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 16", "price": 16000},
            {"name": "Strips 20", "name_en": "Strips 20", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 20", "price": 20000},
            {"name": "Strips 32", "name_en": "Strips 32", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 32", "price": 32000},
            {"name": "Strips 0.5kg", "name_en": "Strips 0.5kg", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 0.5–∫–≥", "price": 60000},
            {"name": "Strips 1kg", "name_en": "Strips 1kg", "name_ru": "–°—Ç—Ä–∏–ø—Å—ã 1–∫–≥", "price": 110000},
            {"name": "Qanotcha 12", "name_en": "Wings 12", "name_ru": "–ö–∞–Ω–æ—Ç—á–∞ 12", "price": 12000},
            {"name": "Qanotcha 16", "name_en": "Wings 16", "name_ru": "–ö–∞–Ω–æ—Ç—á–∞ 16", "price": 16000},
            {"name": "Qanotcha 21", "name_en": "Wings 21", "name_ru": "–ö–∞–Ω–æ—Ç—á–∞ 21", "price": 21000},
            {"name": "Qanotcha 25", "name_en": "Wings 25", "name_ru": "–ö–∞–Ω–æ—Ç—á–∞ 25", "price": 25000},
            {"name": "Smart Strips 12", "name_en": "Smart Strips 12", "name_ru": "–°–º–∞—Ä—Ç –°—Ç—Ä–∏–ø—Å—ã 12", "price": 12000},
            {"name": "Smart Strips 20", "name_en": "Smart Strips 20", "name_ru": "–°–º–∞—Ä—Ç –°—Ç—Ä–∏–ø—Å—ã 20", "price": 20000},
            {"name": "Smart Strips 29", "name_en": "Smart Strips 29", "name_ru": "–°–º–∞—Ä—Ç –°—Ç—Ä–∏–ø—Å—ã 29", "price": 29000},
            {"name": "Smart Strips 36", "name_en": "Smart Strips 36", "name_ru": "–°–º–∞—Ä—Ç –°—Ç—Ä–∏–ø—Å—ã 36", "price": 36000},
            {"name": "Nuggets 8", "name_en": "Nuggets 8", "name_ru": "–ù–∞–≥–≥–µ—Ç—Å—ã 8", "price": 8000},
            {"name": "Nuggets 15", "name_en": "Nuggets 15", "name_ru": "–ù–∞–≥–≥–µ—Ç—Å—ã 15", "price": 15000},
            {"name": "Nuggets 27", "name_en": "Nuggets 27", "name_ru": "–ù–∞–≥–≥–µ—Ç—Å—ã 27", "price": 27000},
            {"name": "Nuggets 38", "name_en": "Nuggets 38", "name_ru": "–ù–∞–≥–≥–µ—Ç—Å—ã 38", "price": 38000},
            {"name": "File 10", "name_en": "Fillet 10", "name_ru": "–§–∏–ª–µ 10", "price": 10000},
            {"name": "File 16", "name_en": "Fillet 16", "name_ru": "–§–∏–ª–µ 16", "price": 16000},
            {"name": "File 22", "name_en": "Fillet 22", "name_ru": "–§–∏–ª–µ 22", "price": 22000},
            {"name": "File 32", "name_en": "Fillet 32", "name_ru": "–§–∏–ª–µ 32", "price": 32000},
            {"name": "Chicken Big", "name_en": "Chicken Big", "name_ru": "–ß–∏–∫–µ–Ω –ë–∏–≥", "price": 75000},
            {"name": "Sirni Dablcriski 11", "name_en": "Cheese Sticks 11", "name_ru": "–°–∏—Ä–Ω–∏ –î–∞–±–ª—Ü—Ä–∏—Å–∫–∏ 11", "price": 11000},
            {"name": "Sirni Dablcriski 18", "name_en": "Cheese Sticks 18", "name_ru": "–°–∏—Ä–Ω–∏ –î–∞–±–ª—Ü—Ä–∏—Å–∫–∏ 18", "price": 18000},
            {"name": "Sirni Dablcriski 26", "name_en": "Cheese Sticks 26", "name_ru": "–°–∏—Ä–Ω–∏ –î–∞–±–ª—Ü—Ä–∏—Å–∫–∏ 26", "price": 26000},
            {"name": "Sirni Dablcriski 33", "name_en": "Cheese Sticks 33", "name_ru": "–°–∏—Ä–Ω–∏ –î–∞–±–ª—Ü—Ä–∏—Å–∫–∏ 33", "price": 33000},
            {"name": "Sirni Shariklar 8", "name_en": "Cheese Balls 8", "name_ru": "–°–∏—Ä–Ω–∏ –®–∞—Ä–∏–∫–ª–∞—Ä 8", "price": 8000},
            {"name": "Sirni Shariklar 15", "name_en": "Cheese Balls 15", "name_ru": "–°–∏—Ä–Ω–∏ –®–∞—Ä–∏–∫–ª–∞—Ä 15", "price": 15000},
            {"name": "Sirni Shariklar 22", "name_en": "Cheese Balls 22", "name_ru": "–°–∏—Ä–Ω–∏ –®–∞—Ä–∏–∫–ª–∞—Ä 22", "price": 22000},
            {"name": "Sirni Shariklar 29", "name_en": "Cheese Balls 29", "name_ru": "–°–∏—Ä–Ω–∏ –®–∞—Ä–∏–∫–ª–∞—Ä 29", "price": 29000},
        ]
        
        for p in chickens:
            session.add(Product(subcategory_id=chicken_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(chickens)} chicken items")
        
        # ============ COMBO PRODUCTS ============
        print(f"\nüç± Adding Combo products (subcategory_id={combo_sub.id})...")
        combos = [
            {"name": "Lanchboks", "name_en": "Lunchbox", "name_ru": "–õ–∞–Ω—á–±–æ–∫—Å", "price": 40000},
            {"name": "Kombo Top", "name_en": "Combo Top", "name_ru": "–ö–æ–º–±–æ –¢–æ–ø", "price": 47000},
            {"name": "Kombo Premo", "name_en": "Combo Premo", "name_ru": "–ö–æ–º–±–æ –ü—Ä–µ–º–æ", "price": 53000},
            {"name": "Big Kombo", "name_en": "Big Combo", "name_ru": "–ë–∏–≥ –ö–æ–º–±–æ", "price": 57000},
            {"name": "Student Kombo", "name_en": "Student Combo", "name_ru": "–°—Ç—É–¥–µ–Ω—Ç –ö–æ–º–±–æ", "price": 45000},
            {"name": "Kombo Ikkilik", "name_en": "Combo Double", "name_ru": "–ö–æ–º–±–æ –ò–∫–∫–∏–ª–∏–∫", "price": 47000},
            {"name": "Hot-dog Konbora", "name_en": "Hot-dog Konbora", "name_ru": "–•–æ—Ç-–¥–æ–≥ –ö–æ–Ω–±–æ—Ä–∞", "price": 42000},
            {"name": "Hot-dog Kombo", "name_en": "Hot-dog Combo", "name_ru": "–•–æ—Ç-–¥–æ–≥ –ö–æ–º–±–æ", "price": 50000},
            {"name": "Lavash Kombo", "name_en": "Lavash Combo", "name_ru": "–õ–∞–≤–∞—à –ö–æ–º–±–æ", "price": 65000},
            {"name": "Burger Kombo", "name_en": "Burger Combo", "name_ru": "–ë—É—Ä–≥–µ—Ä –ö–æ–º–±–æ", "price": 65000},
            {"name": "Donar Burger Kombo", "name_en": "Doner Burger Combo", "name_ru": "–î–æ–Ω–∞—Ä –ë—É—Ä–≥–µ—Ä –ö–æ–º–±–æ", "price": 62000},
            {"name": "Chicken Kombo", "name_en": "Chicken Combo", "name_ru": "–ß–∏–∫–µ–Ω –ö–æ–º–±–æ", "price": 40000},
            {"name": "Pizza Kombo", "name_en": "Pizza Combo", "name_ru": "–ü–∏—Ü—Ü–∞ –ö–æ–º–±–æ", "price": 40000},
            {"name": "Donar", "name_en": "Doner", "name_ru": "–î–æ–Ω–∞—Ä", "price": 45000},
            {"name": "Fri", "name_en": "Fries", "name_ru": "–§—Ä–∏", "price": 15000},
        ]
        
        for p in combos:
            session.add(Product(subcategory_id=combo_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(combos)} combo items")
        
        # ============ DRINK PRODUCTS ============
        print(f"\nü•§ Adding Soft Drink products (subcategory_id={soft_drinks_sub.id})...")
        soft_drinks = [
            {"name": "Coca Cola", "name_en": "Coca Cola", "name_ru": "–ö–æ–∫–∞ –ö–æ–ª–∞", "price": 6000},
            {"name": "Fanta", "name_en": "Fanta", "name_ru": "–§–∞–Ω—Ç–∞", "price": 6000},
            {"name": "Sprite", "name_en": "Sprite", "name_ru": "–°–ø—Ä–∞–π—Ç", "price": 6000},
            {"name": "Moxito", "name_en": "Mojito", "name_ru": "–ú–æ—Ö–∏—Ç–æ", "price": 12000},
            {"name": "Bliss", "name_en": "Bliss", "name_ru": "–ë–ª–∏—Å—Å", "price": 6000},
        ]
        
        for p in soft_drinks:
            session.add(Product(subcategory_id=soft_drinks_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(soft_drinks)} soft drinks")
        
        print(f"\n‚òï Adding Hot Drink products (subcategory_id={hot_drinks_sub.id})...")
        hot_drinks = [
            {"name": "Kapuchino", "name_en": "Cappuccino", "name_ru": "–ö–∞–ø—É—á–∏–Ω–æ", "price": 10000},
            {"name": "Qora", "name_en": "Black Coffee", "name_ru": "–ß–µ—Ä–Ω—ã–π", "price": 8000},
            {"name": "Malechiyo", "name_en": "Malechiyo", "name_ru": "–ú–∞–ª–µ—á–∏–π–æ", "price": 12000},
            {"name": "Lemon Chay", "name_en": "Lemon Tea", "name_ru": "–õ–∏–º–æ–Ω –ß–∞–π", "price": 8000},
            {"name": "Choy", "name_en": "Tea", "name_ru": "–ß–æ–π", "price": 5000},
        ]
        
        for p in hot_drinks:
            session.add(Product(subcategory_id=hot_drinks_sub.id, name_uz=p["name"], name_en=p["name_en"], name_ru=p["name_ru"], price=p["price"], image_url=f"./product_images/{p['name_en'].lower().replace(' ', '_')}.jpg"))
        session.commit()
        print(f"   ‚úÖ Added {len(hot_drinks)} hot drinks")
        
        print("\n" + "=" * 50)
        print("‚úÖ DATABASE POPULATED SUCCESSFULLY!")
        print("=" * 50)
        print(f"Categories: {session.query(Category).count()}")
        print(f"Subcategories: {session.query(SubCategory).count()}")
        print(f"Products: {session.query(Product).count()}")
        print("=" * 50)
        
    except Exception as e:
        print(f"\n‚ùå ERROR: {e}")
        import traceback
        traceback.print_exc()
        session.rollback()
    finally:
        session.close()

if __name__ == "__main__":
    print("\nüöÄ Starting complete menu population...\n")
    populate_database()